#+TITLE: Installation instructions

The file lists all steps required to come up with my complete
workspace settings. The main efficiency of the procedure comes from
the fact that I make heavily use of central file management, so that
my system settings are stored in two public git-repos and a private
dropbox folder. 

As the complete setup can be installed easily alongside any existing
operating system, it is highly suitable for temporary trial. The
complete setup should be working in less than two hours, and can be
completely removed from the system within a few mouse clicks.

Hence, do not be afraid to try!

* TODO Enable workspace configuration without private dropbox files
One main goal for the future is to create installation instructions
that avoid all my private data files, but come up with a completely
working similar working environment, too. This could be used to set
up an identical environment for others.
Therefore, I should make too public dropbox folders similarly to my
own private data files, containing some examblary settings.
** TODO Mark sections as private
Mark sections as private that do rely on my personal settings and
private data structure (dropbox, monitor settings, ...)

* Ubuntu uninstallation from Windows
- in windows, right-click on computer
- manage
- manage hard disks: datentr√§gerverwaltung
- delete respective drive

* Ubuntu installation
The installation described will use Ubuntu alongside an existing
Windows installation. 
- press F12 on computer startup to get to boot menu
- start system from USB stick
- check "download updates" and "install third-party software"
- check "install alongside"

** Adjusting Ubuntu system settings
- make Caps lock an alternative Ctrl key: system settings / keyboard
  layout
- remove system shortcuts to enable their usage in emacs: system
  settings / keyboard
  - C-M-d
  - C-M-cursor (left, right, ...)
  - Alt-L
  - Alt-Space

** Mount extern files system from server
- create directory and assign permissions (examplary for user chris)
#+BEGIN_SRC sh 
  sudo mkdir /media/server_name
  sudo chown chris /media/server_name
  sudo adduser chris fuse
#+END_SRC
- install sshfs
#+BEGIN_SRC sh
  sudo apt-get install sshfs
#+END_SRC
- mount extern filesystem at specified mounting point
#+BEGIN_SRC sh
  sshfs username_at_server@server_name:/path/to/extern/folder /media/server_name
#+END_SRC
- Remark: it could be necessary to establish a VPN connection first!
- unmounting
#+BEGIN_SRC sh
  fusermount -u /media/server_name
#+END_SRC
** Install printer
- in firefox, open http://localhost:631/
- choose:
  - Lexmark Lexmark E462dtn for secretariat (probably number 4??)
    - modify default page size
  - Lexmark E460dw (I tried up to 7, inclusive)
  - Lexmark C935 (color, christa)
  - Lexmark T654 (black/white, christa)
* Monitor installation
- my monitor properties are:
1680x1050, 60Hz via VGA1
[[http://wiki.ubuntuusers.de/RandR][description using randr]]:
- query, whether correct properties are automatically recognized:
#+BEGIN_SRC sh
xrandr --query
#+END_SRC
- let terminal display correct syntax for my settings:
#+BEGIN_SRC sh
cvt 1680 1050 60
#+END_SRC
- this will show:
Modeline "1680x1050_60.00"  146.25  1680 1784 1960 2240  1050 1053
1059 1089 -hsync +vsync 
- type:
#+BEGIN_SRC sh
  cd
  xrandr --newmode "1680x1050_60.00"  146.25  1680 1784 1960 2240  1050 1053 1059 1089 -hsync +vsync
  xrandr --addmode VGA1 "1680x1050_60.00"
  xrandr --output VGA1 --mode "1680x1050_60.00"
#+END_SRC

#+RESULTS:

* Install additional software
** Git
via console:
#+BEGIN_SRC sh  
  sudo apt-get install git-core
#+END_SRC
** w3m
via Software Center, install
- w3m
- w3m-el
** dropbox
via Software Center
- restart Nautilus
- if dialog pops up:
  - install dropbox correctly
  - copy-paste instructions from webpage
** emacs
Open emacs once, so that .emacs.d folder will be set up
** firemacs
- via browser: firefox addon
- modify privacy settings: clear cookies each time firefox is closed
** okular
- via software center
- make okular default pdf viewer:
  - right click on any pdf-file
  - properties
  - open with
  - select okular
  - set as default
- create common backup folder for annotations
#+BEGIN_SRC sh
  rmdir ~/.kde/share/apps/okular/docdata
  ln -s ~/Dropbox/personal_data/okular_annotations/ ~/.kde/share/apps/okular/docdata 
#+END_SRC
** mendeley desktop
via homepage: links to Software Center
** anyconnect client
- got to [[https://www.lrz.de/services/netz/mobil/vpn/anyconnect/][lrz vpn homepage]]
- trust lrz certificate LRZ-CA-G01
- click link to asa-cluster.lrz.de
- if automatic installation fails, click Linux i386 link
- save file
#+BEGIN_SRC sh
  sudo sh vpnsetup.sh
#+END_SRC
** texlive
#+BEGIN_SRC sh
  sudo apt-get install texlive-full
  sudo apt-get install latex-beamer
#+END_SRC

** R project
- get R base via command line
#+BEGIN_SRC sh
sudo apt-get update
sudo apt-get install r-base
#+END_SRC

** LyX
- via software manager
- setup own shortcuts:
  - tools / preferences / editing / shortcuts / bind file
  - choose: ~/Dropbox/personal_data/lyx_customized_bindings.bind

** CVS
#+BEGIN_SRC sh
  sudo apt-get install cvs
#+END_SRC
** gnutls
via Software Center, install "gnutls-bin". This is required to savely
connect to some email providers. For example, my work email address
is handled by LRZ, and I was not able to send mails without this
additional installation.

** Matlab
*** installation
- login on Matlab webpage
- download installation file
- follow instructions
*** bash shell alias
for more convenient startup from shell, create alias to start with "matlab":
- in ~/.bashrc, insert 
#+BEGIN_SRC sh
alias matlab='sh ~/MATLAB/R2012a/bin/matlab'
#+END_SRC
** ghostscript                                                     :noexport:
- download from [[http://www.ghostscript.com/download/][webpage]]
- extract tar
#+BEGIN_SRC sh
  tar -xf ghostscript-9.06-linux-x86.tar.gz
#+END_SRC
   SCHEDULED: <2012-10-07 Sun>
   CLOCK: [2012-10-07 Sun 11:20]--[2012-10-07 Sun 11:21] =>  0:01
Added: [2012-10-07 Sun 11:20]
* Get personal emacs settings
- if required, create .emacs.d directory in home directory
#+BEGIN_SRC sh
  mkdir .emacs.d
#+END_SRC
- change directory to .emacs.d
- clone git repository
#+BEGIN_SRC sh
  git clone https://github.com/cgroll/dot_emacs.d.git .
#+END_SRC
- set symbolic links to personal data files
#+BEGIN_SRC sh
  ln -s ~/Dropbox/personal_data/ntb_dot_files/.authinfo
  ln -s ~/Dropbox/personal_data/ntb_dot_files/.gnus
  ln -s ~/Dropbox/personal_data/ntb_dot_files/.bbdb
  ln -s ~/Dropbox/personal_data/ntb_dot_files/.newsrc
  ln -s ~/Dropbox/personal_data/org/
  ln -s ~/Dropbox/personal_data/ntb_dot_files/.Renviron
  rmdir ~/Downloads/
  ln -s ~/Dropbox/Downloads/
#+END_SRC

* Install Emacs extensions
** org-mode
- download tar file from orgmode.org
- in ~/Downloads/ folder:
#+BEGIN_SRC sh  
  tar -xf org-7.9.2.tar.gz
  rm org-7.9.2.tar.gz
  mv org-7.9.2 ~/.emacs.d/extensions/org
#+END_SRC
- change into extracted folder
#+BEGIN_SRC sh  
  cd ~/.emacs.d/extensions/org
  sudo make install
  sudo rm -r org-7.9.2
#+END_SRC
** ESS
- download tar file from webpage
- change directory to download folder
- extract to /usr/share/emacs/site-lisp/ directory:
#+BEGIN_SRC sh
  sudo tar -xf ess.tar.gz -C /usr/share/emacs/site-lisp/
#+END_SRC
- option -C is necessary to extract to folder other than current
  directory 
*** ess-r-object-tooltip
- note: due to required changes, the file is added to my .emacs.d git
  repo!
- go to [[https://gist.github.com/305561][homepage]]
- download file and extract to .emacs.d/extensions/
- due to changes in ess, modifications of the file may be required
- new versions usually can be found in comments at bottom of [[http://www.sigmafield.org/2009/10/01/r-object-tooltips-in-ess][sigmafield]]
** magit
- download tar from github
- extract tar
- change directory to extracted folder
#+BEGIN_SRC sh
  make && sudo make install
#+END_SRC
- delete tar and extracted folder
** auctex
- download tar from [[http://www.gnu.org/software/auctex/download-for-unix.html][webpage]]
- extract tar
#+BEGIN_SRC sh
  tar -xf auctex-11.86.tar.gz
#+END_SRC
- install
#+BEGIN_SRC sh
  ./configure
  make
  sudo make install
#+END_SRC
** reftex
** bbdb
- change to ~/.emacs.d/extensions/
- download from cvs
#+BEGIN_SRC emacs-lisp
  cvs -d :pserver:anonymous@bbdb.cvs.sourceforge.net:/cvsroot/bbdb login
  cvs -d :pserver:anonymous@bbdb.cvs.sourceforge.net:/cvsroot/bbdb checkout bbdb
#+END_SRC
- go to ~/.emacs.d/extensions/bbdb/
- build bbdb
#+BEGIN_SRC emacs-lisp
  autoconf
  ./configure
  make autoloads
  make all
#+END_SRC
** [[http://blogs.mathworks.com/community/2009/09/14/matlab-emacs-integration-is-back/][matlab-emacs]]
*** get [[http://cedet.sourceforge.net/][cedet]]
- download tar from [[http://cedet.sourceforge.net/][webpage]]
- change into ~/.emacs.d/extensions/
#+BEGIN_SRC sh
tar -xf ~/Downloads/cedet-1.1.tar.gz
#+END_SRC
*** get cvs
#+BEGIN_SRC sh
sudo apt-get install cvs
#+END_SRC
*** install matlab-emacs
- change directory to ~/Downloads/
- get matlab-emacs via cvs
#+BEGIN_SRC sh
  cvs -z3 -d:pserver:anonymous@matlab-emacs.cvs.sourceforge.net:/cvsroot/matlab-emacs co -P matlab-emacs
#+END_SRC
- copy matlab-emacs to ~/.emacs.d/extensions/
#+BEGIN_SRC sh
  mv matlab-emacs ~/.emacs.d/extensions/
#+END_SRC
- change to ~/.emacs.d/extensions/matlab-emacs/
- build matlab with correct path to cedet
#+BEGIN_SRC sh
  sudo make "LOADPATH=~/.emacs.d/extensions/cedet-1.1/common ~/.emacs.d/extensions/cedet-1.1/eieio ~/.emacs.d/extensions/cedet-1.1/semantic/bovine/ ~/.emacs.d/extensions/cedet-1.1/semantic/"
#+END_SRC
*** set up remote matlab according to [[http://stackoverflow.com/questions/1133498/is-it-possible-for-emacs-to-run-a-matlab-shell-that-is-located-on-a-remote-serve][stackoverflow]]
- create sh script "remote_matlab" pointing to matlab on server
#+BEGIN_EXAMPLE
  #!/bin/bash
  ssh username@hostname matlab -nodisplay
#+END_EXAMPLE
- change line 4149 in matlab.el: instead of
#+BEGIN_SRC emacs-lisp
(defcustom matlab-shell-command "matlab"
#+END_SRC
write 
#+BEGIN_SRC emacs-lisp
(defcustom matlab-shell-command "~/Dropbox/personal_data/remote_matlab"   
#+END_SRC
** flyspell
- install German dictionary:
#+BEGIN_SRC sh
  sudo apt-get install aspell-de
#+END_SRC
* Get computational science knowledge database
- go to home directory
#+BEGIN_SRC sh
  git clone https://github.com/cgroll/comp_science
#+END_SRC

